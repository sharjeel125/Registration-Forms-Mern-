{"version":3,"sources":["component/Signup.jsx","component/Login.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","validationSchema","yup","name","required","email","password","min","max","Signup","formik","useFormik","initialValues","onSubmit","values","resetForm","console","log","axios","post","then","res","data","className","handleSubmit","Stack","spacing","TextField","fullWidth","color","id","label","variant","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","Login","App","to","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bfe07fd.chunk.js","sourcesContent":["import '../index.css'\r\nimport axios from 'axios';\r\nimport { useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\n\r\nconst dev = \"http://localhost:5000\"\r\nconst baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\r\n\r\nconst validationSchema = yup.object({\r\n  name: yup\r\n    .string('Enter your Name')\r\n    .required('Name is required'),\r\n\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .max(10, 'No more then 10')\r\n    .required('Password is required'),\r\n\r\n});\r\n\r\n\r\nfunction Signup() {\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n\r\n    },\r\n    onSubmit: onSubmitFunction\r\n  });\r\n\r\n  function onSubmitFunction(values, { resetForm }) {\r\n    console.log(\"values: \", values)\r\n\r\n    axios.post(`${baseUrl}/api/v1/registration`, {\r\n      name: values.name,\r\n      email: values.email,\r\n      password: values.password\r\n    })\r\n      .then(res => {\r\n        console.log(res.data);\r\n\r\n      });\r\n    resetForm({ values: '' })\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"heading\">\r\n        <h1>Registration</h1>\r\n      </div>\r\n\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Stack spacing={2}>\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n\r\n            name=\"name\"\r\n            value={formik.values.name}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.name && Boolean(formik.errors.name)}\r\n            helperText={formik.touched.name && formik.errors.name}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"E-mail\"\r\n            variant=\"outlined\"\r\n\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"filled-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n\r\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Sign up</Button>\r\n        </Stack>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import '../index.css'\r\nimport axios from 'axios';\r\nimport { useFormik } from \"formik\";\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport * as yup from 'yup';\r\n\r\nconst dev = \"http://localhost:5000\"\r\nconst baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\r\n\r\nconst validationSchema = yup.object({\r\n  \r\n\r\n  email: yup\r\n    .string('Enter your email')\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string('Enter your password')\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .max(10, 'No more then 10')\r\n    .required('Password is required'),\r\n\r\n});\r\n\r\n\r\nfunction Login() {\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      \r\n      email: '',\r\n      password: '',\r\n\r\n    },\r\n    onSubmit: onSubmitFunction\r\n  });\r\n\r\n  function onSubmitFunction(values, { resetForm }) {\r\n    console.log(\"values: \", values)\r\n\r\n    axios.post(`${baseUrl}/api/v1/login`, {\r\n      \r\n      email: values.email,\r\n      password: values.password\r\n    })\r\n      .then(res => {\r\n        console.log(res.data);\r\n\r\n      });\r\n    resetForm({ values: '' })\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"heading\">\r\n        <h1>Log-in</h1>\r\n      </div>\r\n\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Stack spacing={2}>\r\n         \r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"outlined-basic\"\r\n            label=\"E-mail\"\r\n            variant=\"outlined\"\r\n\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            color=\"primary\"\r\n            id=\"filled-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n\r\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Login</Button>\r\n        </Stack>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\nimport Signup from \"./component/Signup\"\nimport Login from \"./component/Login\"\nimport {\n\n  Switch,\n  Route,\n  Link\n\n} from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    <>\n    \n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Signup</Link>\n          </li>\n          <li>\n            <Link to=\"/login\">Login</Link>\n          </li>\n        </ul>\n      </nav>\n\n      <Switch>\n\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route exact path=\"/\">\n          <Signup />\n        </Route>\n\n      </Switch>\n    </>\n\n\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  \n} from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}